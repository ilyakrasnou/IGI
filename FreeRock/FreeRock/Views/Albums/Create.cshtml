@model FreeRock.Models.Album

@{
    ViewData["Title"] = "CreateAlbum";
}

<h2>Create</h2>

<h4>Album</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for=" Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CoverPath" class="control-label"></label>
                <input asp-for="CoverPath" class="form-control" />
                <span asp-validation-for="CoverPath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Artist.Name" class="control-label"></label>
                <input name="Artist.Name" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ReleaseDate" class="control-label"></label>
                <input asp-for="ReleaseDate" class="form-control" />
                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <table id="songTable">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => (new Song()).Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => (new Song()).YouTubeUrl)
                        </th>
                        <th />
                    </tr>
                </thead>
                <tbody id="tbody">
                    <tr id="tr-0">
                        <td>
                            <input type="text" name="Songs[0].Name" value="@Model.Songs[0].Name" />
                        </td>
                        <td>
                            <input type="url" name="Songs[0].YouTubeUrl" value="@Model.Songs[0].YouTubeUrl" />
                        </td>
                        <td>
                            <input type="button" value="Add" onclick="insertRow(0)" />
                        </td>
                        <td>
                            <input type="button" value="Delete" onclick="removeRow(0)" />
                        </td>
                    </tr>
                    @for (byte i = 1; i < Model.Songs.Count; ++i)
                    {
                        <tr id="tr-@i">
                            <td>
                                <input type="text" name="Songs[@i].Name" value="@Model.Songs[i].Name" />
                            </td>
                            <td>
                                <input type="url" name="Songs[@i].YouTubeUrl" value="@Model.Songs[i].YouTubeUrl" />
                            </td>
                            <td>
                                <input type="button" value="Add" onclick="insertRow(@i)" />
                            </td>
                            <td>
                                <input type="button" value="Delete" onclick="removeRow(@i)" />
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
            <script type="text/javascript">
                updateIndex = () => {
                    $('#tbody > tr').each(function (i) {
                        $(this).attr('id', `tr-${i}`);
                        $(this).find("input[type='text']").attr('name', `Songs[${i}].Name`);
                        $(this).find("input[type='url']").attr('name', `Songs[${i}].YouTubeUrl`);
                        $(this).find("input[value='Add']").attr('onclick', `insertRow(${i})`);
                        $(this).find("input[value='Delete']").attr('onclick', `removeRow(${i})`);
                    })
                }

                insertRow = (i) => {
                    $(`#tr-${i}`).after(
                        `
                        <tr>
                            <td>
                                <input type="text"/>
                            </td>
                            <td>
                                <input type="url"/>
                            </td>
                            <td>
                                <input type="button" value="Add" />
                            </td>
                            <td>
                                <input type="button" value="Delete" />
                            </td>
                        </tr>
                        `
                    );
                    updateIndex();
                }

                removeRow = (i) => {
                    $(`#tr-${i}`).remove();
                    updateIndex();
                }

            </script>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

