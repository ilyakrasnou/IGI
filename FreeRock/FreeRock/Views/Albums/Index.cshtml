@model IEnumerable<FreeRock.Models.Album>

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>
<div>
    @await Component.InvokeAsync("NewAlbums")
</div>
<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <p>
        Title: <input type="text" name="SearchString">
        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CoverPath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReleaseDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CoverPath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            @if (User.IsInRole("admin"))
            {
                <td>
                    <a asp-action="Edit" asp-route-id="@item.AlbumID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.AlbumID">Delete</a>
                </td>
            }
            else
            {
                <td>
                    <a asp-action="Details" asp-route-id="@item.AlbumID">Details</a>
                </td>
            }
        </tr>
}
    </tbody>
</table>
